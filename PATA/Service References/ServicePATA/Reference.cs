//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PATA.ServicePATA {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TokenWeb", Namespace="http://schemas.datacontract.org/2004/07/WCFPata")]
    [System.SerializableAttribute()]
    public partial class TokenWeb : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PATA.ServicePATA.ContaWEB contaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dataExpirarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dataLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int horasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isTimedOutExpiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PATA.ServicePATA.ContaWEB conta {
            get {
                return this.contaField;
            }
            set {
                if ((object.ReferenceEquals(this.contaField, value) != true)) {
                    this.contaField = value;
                    this.RaisePropertyChanged("conta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dataExpirar {
            get {
                return this.dataExpirarField;
            }
            set {
                if ((this.dataExpirarField.Equals(value) != true)) {
                    this.dataExpirarField = value;
                    this.RaisePropertyChanged("dataExpirar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dataLogin {
            get {
                return this.dataLoginField;
            }
            set {
                if ((this.dataLoginField.Equals(value) != true)) {
                    this.dataLoginField = value;
                    this.RaisePropertyChanged("dataLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int horas {
            get {
                return this.horasField;
            }
            set {
                if ((this.horasField.Equals(value) != true)) {
                    this.horasField = value;
                    this.RaisePropertyChanged("horas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isTimedOutExpired {
            get {
                return this.isTimedOutExpiredField;
            }
            set {
                if ((this.isTimedOutExpiredField.Equals(value) != true)) {
                    this.isTimedOutExpiredField = value;
                    this.RaisePropertyChanged("isTimedOutExpired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContaWEB", Namespace="http://schemas.datacontract.org/2004/07/WCFPata")]
    [System.SerializableAttribute()]
    public partial class ContaWEB : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isAdmin {
            get {
                return this.isAdminField;
            }
            set {
                if ((this.isAdminField.Equals(value) != true)) {
                    this.isAdminField = value;
                    this.RaisePropertyChanged("isAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DadosWEB", Namespace="http://schemas.datacontract.org/2004/07/WCFPata")]
    [System.SerializableAttribute()]
    public partial class DadosWEB : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PATA.ServicePATA.DiagnosticoWEB[] listaDiagnosticosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PATA.ServicePATA.SintomaWEB[] listaSintomasField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PATA.ServicePATA.DiagnosticoWEB[] listaDiagnosticos {
            get {
                return this.listaDiagnosticosField;
            }
            set {
                if ((object.ReferenceEquals(this.listaDiagnosticosField, value) != true)) {
                    this.listaDiagnosticosField = value;
                    this.RaisePropertyChanged("listaDiagnosticos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PATA.ServicePATA.SintomaWEB[] listaSintomas {
            get {
                return this.listaSintomasField;
            }
            set {
                if ((object.ReferenceEquals(this.listaSintomasField, value) != true)) {
                    this.listaSintomasField = value;
                    this.RaisePropertyChanged("listaSintomas");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiagnosticoWEB", Namespace="http://schemas.datacontract.org/2004/07/WCFPata")]
    [System.SerializableAttribute()]
    public partial class DiagnosticoWEB : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PATA.ServicePATA.SintomaWEB[] listaSintomasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string orgaoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tratamentoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PATA.ServicePATA.SintomaWEB[] listaSintomas {
            get {
                return this.listaSintomasField;
            }
            set {
                if ((object.ReferenceEquals(this.listaSintomasField, value) != true)) {
                    this.listaSintomasField = value;
                    this.RaisePropertyChanged("listaSintomas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nome {
            get {
                return this.nomeField;
            }
            set {
                if ((object.ReferenceEquals(this.nomeField, value) != true)) {
                    this.nomeField = value;
                    this.RaisePropertyChanged("nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string orgao {
            get {
                return this.orgaoField;
            }
            set {
                if ((object.ReferenceEquals(this.orgaoField, value) != true)) {
                    this.orgaoField = value;
                    this.RaisePropertyChanged("orgao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tratamento {
            get {
                return this.tratamentoField;
            }
            set {
                if ((object.ReferenceEquals(this.tratamentoField, value) != true)) {
                    this.tratamentoField = value;
                    this.RaisePropertyChanged("tratamento");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SintomaWEB", Namespace="http://schemas.datacontract.org/2004/07/WCFPata")]
    [System.SerializableAttribute()]
    public partial class SintomaWEB : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nomeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nome {
            get {
                return this.nomeField;
            }
            set {
                if ((object.ReferenceEquals(this.nomeField, value) != true)) {
                    this.nomeField = value;
                    this.RaisePropertyChanged("nome");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PacienteWEB", Namespace="http://schemas.datacontract.org/2004/07/WCFPata")]
    [System.SerializableAttribute()]
    public partial class PacienteWEB : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ccField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dataNascField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string moradaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sexoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string telefoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int terapeutaIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cc {
            get {
                return this.ccField;
            }
            set {
                if ((object.ReferenceEquals(this.ccField, value) != true)) {
                    this.ccField = value;
                    this.RaisePropertyChanged("cc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dataNasc {
            get {
                return this.dataNascField;
            }
            set {
                if ((object.ReferenceEquals(this.dataNascField, value) != true)) {
                    this.dataNascField = value;
                    this.RaisePropertyChanged("dataNasc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string morada {
            get {
                return this.moradaField;
            }
            set {
                if ((object.ReferenceEquals(this.moradaField, value) != true)) {
                    this.moradaField = value;
                    this.RaisePropertyChanged("morada");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nome {
            get {
                return this.nomeField;
            }
            set {
                if ((object.ReferenceEquals(this.nomeField, value) != true)) {
                    this.nomeField = value;
                    this.RaisePropertyChanged("nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sexo {
            get {
                return this.sexoField;
            }
            set {
                if ((object.ReferenceEquals(this.sexoField, value) != true)) {
                    this.sexoField = value;
                    this.RaisePropertyChanged("sexo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string telefone {
            get {
                return this.telefoneField;
            }
            set {
                if ((object.ReferenceEquals(this.telefoneField, value) != true)) {
                    this.telefoneField = value;
                    this.RaisePropertyChanged("telefone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int terapeutaID {
            get {
                return this.terapeutaIDField;
            }
            set {
                if ((this.terapeutaIDField.Equals(value) != true)) {
                    this.terapeutaIDField = value;
                    this.RaisePropertyChanged("terapeutaID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TerapeutaWEB", Namespace="http://schemas.datacontract.org/2004/07/WCFPata")]
    [System.SerializableAttribute()]
    public partial class TerapeutaWEB : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ccField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int contaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dataNascField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string telefoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cc {
            get {
                return this.ccField;
            }
            set {
                if ((object.ReferenceEquals(this.ccField, value) != true)) {
                    this.ccField = value;
                    this.RaisePropertyChanged("cc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int contaID {
            get {
                return this.contaIDField;
            }
            set {
                if ((this.contaIDField.Equals(value) != true)) {
                    this.contaIDField = value;
                    this.RaisePropertyChanged("contaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dataNasc {
            get {
                return this.dataNascField;
            }
            set {
                if ((object.ReferenceEquals(this.dataNascField, value) != true)) {
                    this.dataNascField = value;
                    this.RaisePropertyChanged("dataNasc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nome {
            get {
                return this.nomeField;
            }
            set {
                if ((object.ReferenceEquals(this.nomeField, value) != true)) {
                    this.nomeField = value;
                    this.RaisePropertyChanged("nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string telefone {
            get {
                return this.telefoneField;
            }
            set {
                if ((object.ReferenceEquals(this.telefoneField, value) != true)) {
                    this.telefoneField = value;
                    this.RaisePropertyChanged("telefone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpisodioClinicoWEB", Namespace="http://schemas.datacontract.org/2004/07/WCFPata")]
    [System.SerializableAttribute()]
    public partial class EpisodioClinicoWEB : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string diagnosticoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idPacienteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PATA.ServicePATA.SintomaWEB[] listaSintomasField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string data {
            get {
                return this.dataField;
            }
            set {
                if ((object.ReferenceEquals(this.dataField, value) != true)) {
                    this.dataField = value;
                    this.RaisePropertyChanged("data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string diagnostico {
            get {
                return this.diagnosticoField;
            }
            set {
                if ((object.ReferenceEquals(this.diagnosticoField, value) != true)) {
                    this.diagnosticoField = value;
                    this.RaisePropertyChanged("diagnostico");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idPaciente {
            get {
                return this.idPacienteField;
            }
            set {
                if ((this.idPacienteField.Equals(value) != true)) {
                    this.idPacienteField = value;
                    this.RaisePropertyChanged("idPaciente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PATA.ServicePATA.SintomaWEB[] listaSintomas {
            get {
                return this.listaSintomasField;
            }
            set {
                if ((object.ReferenceEquals(this.listaSintomasField, value) != true)) {
                    this.listaSintomasField = value;
                    this.RaisePropertyChanged("listaSintomas");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SistemaPericialWEB", Namespace="http://schemas.datacontract.org/2004/07/WCFPata")]
    [System.SerializableAttribute()]
    public partial class SistemaPericialWEB : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string diagnosticoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal scoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tratamentoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string diagnostico {
            get {
                return this.diagnosticoField;
            }
            set {
                if ((object.ReferenceEquals(this.diagnosticoField, value) != true)) {
                    this.diagnosticoField = value;
                    this.RaisePropertyChanged("diagnostico");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal score {
            get {
                return this.scoreField;
            }
            set {
                if ((this.scoreField.Equals(value) != true)) {
                    this.scoreField = value;
                    this.RaisePropertyChanged("score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tratamento {
            get {
                return this.tratamentoField;
            }
            set {
                if ((object.ReferenceEquals(this.tratamentoField, value) != true)) {
                    this.tratamentoField = value;
                    this.RaisePropertyChanged("tratamento");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicePATA.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTokens", ReplyAction="http://tempuri.org/IService1/getTokensResponse")]
        PATA.ServicePATA.TokenWeb[] getTokens();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTokens", ReplyAction="http://tempuri.org/IService1/getTokensResponse")]
        System.Threading.Tasks.Task<PATA.ServicePATA.TokenWeb[]> getTokensAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/logIn", ReplyAction="http://tempuri.org/IService1/logInResponse")]
        string logIn(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/logIn", ReplyAction="http://tempuri.org/IService1/logInResponse")]
        System.Threading.Tasks.Task<string> logInAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/logOut", ReplyAction="http://tempuri.org/IService1/logOutResponse")]
        void logOut(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/logOut", ReplyAction="http://tempuri.org/IService1/logOutResponse")]
        System.Threading.Tasks.Task logOutAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/isAdmin", ReplyAction="http://tempuri.org/IService1/isAdminResponse")]
        bool isAdmin(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/isAdmin", ReplyAction="http://tempuri.org/IService1/isAdminResponse")]
        System.Threading.Tasks.Task<bool> isAdminAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/isLoggedIn", ReplyAction="http://tempuri.org/IService1/isLoggedInResponse")]
        bool isLoggedIn(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/isLoggedIn", ReplyAction="http://tempuri.org/IService1/isLoggedInResponse")]
        System.Threading.Tasks.Task<bool> isLoggedInAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/carregaXml", ReplyAction="http://tempuri.org/IService1/carregaXmlResponse")]
        bool carregaXml(string token, PATA.ServicePATA.DadosWEB dados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/carregaXml", ReplyAction="http://tempuri.org/IService1/carregaXmlResponse")]
        System.Threading.Tasks.Task<bool> carregaXmlAsync(string token, PATA.ServicePATA.DadosWEB dados);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/lerSintomasXML", ReplyAction="http://tempuri.org/IService1/lerSintomasXMLResponse")]
        PATA.ServicePATA.SintomaWEB[] lerSintomasXML(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/lerSintomasXML", ReplyAction="http://tempuri.org/IService1/lerSintomasXMLResponse")]
        System.Threading.Tasks.Task<PATA.ServicePATA.SintomaWEB[]> lerSintomasXMLAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllPacientes", ReplyAction="http://tempuri.org/IService1/getAllPacientesResponse")]
        PATA.ServicePATA.PacienteWEB[] getAllPacientes(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllPacientes", ReplyAction="http://tempuri.org/IService1/getAllPacientesResponse")]
        System.Threading.Tasks.Task<PATA.ServicePATA.PacienteWEB[]> getAllPacientesAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllContas", ReplyAction="http://tempuri.org/IService1/getAllContasResponse")]
        PATA.ServicePATA.ContaWEB[] getAllContas(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllContas", ReplyAction="http://tempuri.org/IService1/getAllContasResponse")]
        System.Threading.Tasks.Task<PATA.ServicePATA.ContaWEB[]> getAllContasAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllContasTerapeutas", ReplyAction="http://tempuri.org/IService1/getAllContasTerapeutasResponse")]
        PATA.ServicePATA.ContaWEB[] getAllContasTerapeutas(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllContasTerapeutas", ReplyAction="http://tempuri.org/IService1/getAllContasTerapeutasResponse")]
        System.Threading.Tasks.Task<PATA.ServicePATA.ContaWEB[]> getAllContasTerapeutasAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllTerapeutas", ReplyAction="http://tempuri.org/IService1/getAllTerapeutasResponse")]
        PATA.ServicePATA.TerapeutaWEB[] getAllTerapeutas(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllTerapeutas", ReplyAction="http://tempuri.org/IService1/getAllTerapeutasResponse")]
        System.Threading.Tasks.Task<PATA.ServicePATA.TerapeutaWEB[]> getAllTerapeutasAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllPacientesByTerapeuta", ReplyAction="http://tempuri.org/IService1/getAllPacientesByTerapeutaResponse")]
        PATA.ServicePATA.PacienteWEB[] getAllPacientesByTerapeuta(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllPacientesByTerapeuta", ReplyAction="http://tempuri.org/IService1/getAllPacientesByTerapeutaResponse")]
        System.Threading.Tasks.Task<PATA.ServicePATA.PacienteWEB[]> getAllPacientesByTerapeutaAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNomeTerapeuta", ReplyAction="http://tempuri.org/IService1/getNomeTerapeutaResponse")]
        string getNomeTerapeuta(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getNomeTerapeuta", ReplyAction="http://tempuri.org/IService1/getNomeTerapeutaResponse")]
        System.Threading.Tasks.Task<string> getNomeTerapeutaAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllEpisodiosByIDPaciente", ReplyAction="http://tempuri.org/IService1/getAllEpisodiosByIDPacienteResponse")]
        PATA.ServicePATA.EpisodioClinicoWEB[] getAllEpisodiosByIDPaciente(string token, int idPaciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllEpisodiosByIDPaciente", ReplyAction="http://tempuri.org/IService1/getAllEpisodiosByIDPacienteResponse")]
        System.Threading.Tasks.Task<PATA.ServicePATA.EpisodioClinicoWEB[]> getAllEpisodiosByIDPacienteAsync(string token, int idPaciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getListaSistemaPericial", ReplyAction="http://tempuri.org/IService1/getListaSistemaPericialResponse")]
        PATA.ServicePATA.SistemaPericialWEB[] getListaSistemaPericial(string token, PATA.ServicePATA.SintomaWEB[] lista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getListaSistemaPericial", ReplyAction="http://tempuri.org/IService1/getListaSistemaPericialResponse")]
        System.Threading.Tasks.Task<PATA.ServicePATA.SistemaPericialWEB[]> getListaSistemaPericialAsync(string token, PATA.ServicePATA.SintomaWEB[] lista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addPaciente", ReplyAction="http://tempuri.org/IService1/addPacienteResponse")]
        bool addPaciente(string token, PATA.ServicePATA.PacienteWEB paciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addPaciente", ReplyAction="http://tempuri.org/IService1/addPacienteResponse")]
        System.Threading.Tasks.Task<bool> addPacienteAsync(string token, PATA.ServicePATA.PacienteWEB paciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addPacienteClienteAdmin", ReplyAction="http://tempuri.org/IService1/addPacienteClienteAdminResponse")]
        bool addPacienteClienteAdmin(string token, PATA.ServicePATA.PacienteWEB paciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addPacienteClienteAdmin", ReplyAction="http://tempuri.org/IService1/addPacienteClienteAdminResponse")]
        System.Threading.Tasks.Task<bool> addPacienteClienteAdminAsync(string token, PATA.ServicePATA.PacienteWEB paciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editPaciente", ReplyAction="http://tempuri.org/IService1/editPacienteResponse")]
        bool editPaciente(string token, PATA.ServicePATA.PacienteWEB paciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editPaciente", ReplyAction="http://tempuri.org/IService1/editPacienteResponse")]
        System.Threading.Tasks.Task<bool> editPacienteAsync(string token, PATA.ServicePATA.PacienteWEB paciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editPacienteClienteAdmin", ReplyAction="http://tempuri.org/IService1/editPacienteClienteAdminResponse")]
        bool editPacienteClienteAdmin(string token, PATA.ServicePATA.PacienteWEB paciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editPacienteClienteAdmin", ReplyAction="http://tempuri.org/IService1/editPacienteClienteAdminResponse")]
        System.Threading.Tasks.Task<bool> editPacienteClienteAdminAsync(string token, PATA.ServicePATA.PacienteWEB paciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editTerapeuta", ReplyAction="http://tempuri.org/IService1/editTerapeutaResponse")]
        bool editTerapeuta(string token, PATA.ServicePATA.TerapeutaWEB terapeuta, PATA.ServicePATA.ContaWEB conta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editTerapeuta", ReplyAction="http://tempuri.org/IService1/editTerapeutaResponse")]
        System.Threading.Tasks.Task<bool> editTerapeutaAsync(string token, PATA.ServicePATA.TerapeutaWEB terapeuta, PATA.ServicePATA.ContaWEB conta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editConta", ReplyAction="http://tempuri.org/IService1/editContaResponse")]
        bool editConta(string token, PATA.ServicePATA.ContaWEB conta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editConta", ReplyAction="http://tempuri.org/IService1/editContaResponse")]
        System.Threading.Tasks.Task<bool> editContaAsync(string token, PATA.ServicePATA.ContaWEB conta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/removeTerapeuta", ReplyAction="http://tempuri.org/IService1/removeTerapeutaResponse")]
        bool removeTerapeuta(string token, int idContaTerapeuta, int idTerapeuta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/removeTerapeuta", ReplyAction="http://tempuri.org/IService1/removeTerapeutaResponse")]
        System.Threading.Tasks.Task<bool> removeTerapeutaAsync(string token, int idContaTerapeuta, int idTerapeuta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addConta", ReplyAction="http://tempuri.org/IService1/addContaResponse")]
        bool addConta(string token, PATA.ServicePATA.ContaWEB conta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addConta", ReplyAction="http://tempuri.org/IService1/addContaResponse")]
        System.Threading.Tasks.Task<bool> addContaAsync(string token, PATA.ServicePATA.ContaWEB conta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addTerapeuta", ReplyAction="http://tempuri.org/IService1/addTerapeutaResponse")]
        bool addTerapeuta(string token, PATA.ServicePATA.TerapeutaWEB terapeuta, PATA.ServicePATA.ContaWEB conta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addTerapeuta", ReplyAction="http://tempuri.org/IService1/addTerapeutaResponse")]
        System.Threading.Tasks.Task<bool> addTerapeutaAsync(string token, PATA.ServicePATA.TerapeutaWEB terapeuta, PATA.ServicePATA.ContaWEB conta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addEpisodioClinico", ReplyAction="http://tempuri.org/IService1/addEpisodioClinicoResponse")]
        bool addEpisodioClinico(string token, PATA.ServicePATA.EpisodioClinicoWEB episodio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addEpisodioClinico", ReplyAction="http://tempuri.org/IService1/addEpisodioClinicoResponse")]
        System.Threading.Tasks.Task<bool> addEpisodioClinicoAsync(string token, PATA.ServicePATA.EpisodioClinicoWEB episodio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/removeTerapeutaFromPaciente", ReplyAction="http://tempuri.org/IService1/removeTerapeutaFromPacienteResponse")]
        bool removeTerapeutaFromPaciente(string token, int idPaciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/removeTerapeutaFromPaciente", ReplyAction="http://tempuri.org/IService1/removeTerapeutaFromPacienteResponse")]
        System.Threading.Tasks.Task<bool> removeTerapeutaFromPacienteAsync(string token, int idPaciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/removeConta", ReplyAction="http://tempuri.org/IService1/removeContaResponse")]
        string removeConta(string token, int idConta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/removeConta", ReplyAction="http://tempuri.org/IService1/removeContaResponse")]
        System.Threading.Tasks.Task<string> removeContaAsync(string token, int idConta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/removePaciente", ReplyAction="http://tempuri.org/IService1/removePacienteResponse")]
        bool removePaciente(string token, int idPaciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/removePaciente", ReplyAction="http://tempuri.org/IService1/removePacienteResponse")]
        System.Threading.Tasks.Task<bool> removePacienteAsync(string token, int idPaciente);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : PATA.ServicePATA.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<PATA.ServicePATA.IService1>, PATA.ServicePATA.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PATA.ServicePATA.TokenWeb[] getTokens() {
            return base.Channel.getTokens();
        }
        
        public System.Threading.Tasks.Task<PATA.ServicePATA.TokenWeb[]> getTokensAsync() {
            return base.Channel.getTokensAsync();
        }
        
        public string logIn(string username, string password) {
            return base.Channel.logIn(username, password);
        }
        
        public System.Threading.Tasks.Task<string> logInAsync(string username, string password) {
            return base.Channel.logInAsync(username, password);
        }
        
        public void logOut(string token) {
            base.Channel.logOut(token);
        }
        
        public System.Threading.Tasks.Task logOutAsync(string token) {
            return base.Channel.logOutAsync(token);
        }
        
        public bool isAdmin(string token) {
            return base.Channel.isAdmin(token);
        }
        
        public System.Threading.Tasks.Task<bool> isAdminAsync(string token) {
            return base.Channel.isAdminAsync(token);
        }
        
        public bool isLoggedIn(string token) {
            return base.Channel.isLoggedIn(token);
        }
        
        public System.Threading.Tasks.Task<bool> isLoggedInAsync(string token) {
            return base.Channel.isLoggedInAsync(token);
        }
        
        public bool carregaXml(string token, PATA.ServicePATA.DadosWEB dados) {
            return base.Channel.carregaXml(token, dados);
        }
        
        public System.Threading.Tasks.Task<bool> carregaXmlAsync(string token, PATA.ServicePATA.DadosWEB dados) {
            return base.Channel.carregaXmlAsync(token, dados);
        }
        
        public PATA.ServicePATA.SintomaWEB[] lerSintomasXML(string token) {
            return base.Channel.lerSintomasXML(token);
        }
        
        public System.Threading.Tasks.Task<PATA.ServicePATA.SintomaWEB[]> lerSintomasXMLAsync(string token) {
            return base.Channel.lerSintomasXMLAsync(token);
        }
        
        public PATA.ServicePATA.PacienteWEB[] getAllPacientes(string token) {
            return base.Channel.getAllPacientes(token);
        }
        
        public System.Threading.Tasks.Task<PATA.ServicePATA.PacienteWEB[]> getAllPacientesAsync(string token) {
            return base.Channel.getAllPacientesAsync(token);
        }
        
        public PATA.ServicePATA.ContaWEB[] getAllContas(string token) {
            return base.Channel.getAllContas(token);
        }
        
        public System.Threading.Tasks.Task<PATA.ServicePATA.ContaWEB[]> getAllContasAsync(string token) {
            return base.Channel.getAllContasAsync(token);
        }
        
        public PATA.ServicePATA.ContaWEB[] getAllContasTerapeutas(string token) {
            return base.Channel.getAllContasTerapeutas(token);
        }
        
        public System.Threading.Tasks.Task<PATA.ServicePATA.ContaWEB[]> getAllContasTerapeutasAsync(string token) {
            return base.Channel.getAllContasTerapeutasAsync(token);
        }
        
        public PATA.ServicePATA.TerapeutaWEB[] getAllTerapeutas(string token) {
            return base.Channel.getAllTerapeutas(token);
        }
        
        public System.Threading.Tasks.Task<PATA.ServicePATA.TerapeutaWEB[]> getAllTerapeutasAsync(string token) {
            return base.Channel.getAllTerapeutasAsync(token);
        }
        
        public PATA.ServicePATA.PacienteWEB[] getAllPacientesByTerapeuta(string token) {
            return base.Channel.getAllPacientesByTerapeuta(token);
        }
        
        public System.Threading.Tasks.Task<PATA.ServicePATA.PacienteWEB[]> getAllPacientesByTerapeutaAsync(string token) {
            return base.Channel.getAllPacientesByTerapeutaAsync(token);
        }
        
        public string getNomeTerapeuta(string token) {
            return base.Channel.getNomeTerapeuta(token);
        }
        
        public System.Threading.Tasks.Task<string> getNomeTerapeutaAsync(string token) {
            return base.Channel.getNomeTerapeutaAsync(token);
        }
        
        public PATA.ServicePATA.EpisodioClinicoWEB[] getAllEpisodiosByIDPaciente(string token, int idPaciente) {
            return base.Channel.getAllEpisodiosByIDPaciente(token, idPaciente);
        }
        
        public System.Threading.Tasks.Task<PATA.ServicePATA.EpisodioClinicoWEB[]> getAllEpisodiosByIDPacienteAsync(string token, int idPaciente) {
            return base.Channel.getAllEpisodiosByIDPacienteAsync(token, idPaciente);
        }
        
        public PATA.ServicePATA.SistemaPericialWEB[] getListaSistemaPericial(string token, PATA.ServicePATA.SintomaWEB[] lista) {
            return base.Channel.getListaSistemaPericial(token, lista);
        }
        
        public System.Threading.Tasks.Task<PATA.ServicePATA.SistemaPericialWEB[]> getListaSistemaPericialAsync(string token, PATA.ServicePATA.SintomaWEB[] lista) {
            return base.Channel.getListaSistemaPericialAsync(token, lista);
        }
        
        public bool addPaciente(string token, PATA.ServicePATA.PacienteWEB paciente) {
            return base.Channel.addPaciente(token, paciente);
        }
        
        public System.Threading.Tasks.Task<bool> addPacienteAsync(string token, PATA.ServicePATA.PacienteWEB paciente) {
            return base.Channel.addPacienteAsync(token, paciente);
        }
        
        public bool addPacienteClienteAdmin(string token, PATA.ServicePATA.PacienteWEB paciente) {
            return base.Channel.addPacienteClienteAdmin(token, paciente);
        }
        
        public System.Threading.Tasks.Task<bool> addPacienteClienteAdminAsync(string token, PATA.ServicePATA.PacienteWEB paciente) {
            return base.Channel.addPacienteClienteAdminAsync(token, paciente);
        }
        
        public bool editPaciente(string token, PATA.ServicePATA.PacienteWEB paciente) {
            return base.Channel.editPaciente(token, paciente);
        }
        
        public System.Threading.Tasks.Task<bool> editPacienteAsync(string token, PATA.ServicePATA.PacienteWEB paciente) {
            return base.Channel.editPacienteAsync(token, paciente);
        }
        
        public bool editPacienteClienteAdmin(string token, PATA.ServicePATA.PacienteWEB paciente) {
            return base.Channel.editPacienteClienteAdmin(token, paciente);
        }
        
        public System.Threading.Tasks.Task<bool> editPacienteClienteAdminAsync(string token, PATA.ServicePATA.PacienteWEB paciente) {
            return base.Channel.editPacienteClienteAdminAsync(token, paciente);
        }
        
        public bool editTerapeuta(string token, PATA.ServicePATA.TerapeutaWEB terapeuta, PATA.ServicePATA.ContaWEB conta) {
            return base.Channel.editTerapeuta(token, terapeuta, conta);
        }
        
        public System.Threading.Tasks.Task<bool> editTerapeutaAsync(string token, PATA.ServicePATA.TerapeutaWEB terapeuta, PATA.ServicePATA.ContaWEB conta) {
            return base.Channel.editTerapeutaAsync(token, terapeuta, conta);
        }
        
        public bool editConta(string token, PATA.ServicePATA.ContaWEB conta) {
            return base.Channel.editConta(token, conta);
        }
        
        public System.Threading.Tasks.Task<bool> editContaAsync(string token, PATA.ServicePATA.ContaWEB conta) {
            return base.Channel.editContaAsync(token, conta);
        }
        
        public bool removeTerapeuta(string token, int idContaTerapeuta, int idTerapeuta) {
            return base.Channel.removeTerapeuta(token, idContaTerapeuta, idTerapeuta);
        }
        
        public System.Threading.Tasks.Task<bool> removeTerapeutaAsync(string token, int idContaTerapeuta, int idTerapeuta) {
            return base.Channel.removeTerapeutaAsync(token, idContaTerapeuta, idTerapeuta);
        }
        
        public bool addConta(string token, PATA.ServicePATA.ContaWEB conta) {
            return base.Channel.addConta(token, conta);
        }
        
        public System.Threading.Tasks.Task<bool> addContaAsync(string token, PATA.ServicePATA.ContaWEB conta) {
            return base.Channel.addContaAsync(token, conta);
        }
        
        public bool addTerapeuta(string token, PATA.ServicePATA.TerapeutaWEB terapeuta, PATA.ServicePATA.ContaWEB conta) {
            return base.Channel.addTerapeuta(token, terapeuta, conta);
        }
        
        public System.Threading.Tasks.Task<bool> addTerapeutaAsync(string token, PATA.ServicePATA.TerapeutaWEB terapeuta, PATA.ServicePATA.ContaWEB conta) {
            return base.Channel.addTerapeutaAsync(token, terapeuta, conta);
        }
        
        public bool addEpisodioClinico(string token, PATA.ServicePATA.EpisodioClinicoWEB episodio) {
            return base.Channel.addEpisodioClinico(token, episodio);
        }
        
        public System.Threading.Tasks.Task<bool> addEpisodioClinicoAsync(string token, PATA.ServicePATA.EpisodioClinicoWEB episodio) {
            return base.Channel.addEpisodioClinicoAsync(token, episodio);
        }
        
        public bool removeTerapeutaFromPaciente(string token, int idPaciente) {
            return base.Channel.removeTerapeutaFromPaciente(token, idPaciente);
        }
        
        public System.Threading.Tasks.Task<bool> removeTerapeutaFromPacienteAsync(string token, int idPaciente) {
            return base.Channel.removeTerapeutaFromPacienteAsync(token, idPaciente);
        }
        
        public string removeConta(string token, int idConta) {
            return base.Channel.removeConta(token, idConta);
        }
        
        public System.Threading.Tasks.Task<string> removeContaAsync(string token, int idConta) {
            return base.Channel.removeContaAsync(token, idConta);
        }
        
        public bool removePaciente(string token, int idPaciente) {
            return base.Channel.removePaciente(token, idPaciente);
        }
        
        public System.Threading.Tasks.Task<bool> removePacienteAsync(string token, int idPaciente) {
            return base.Channel.removePacienteAsync(token, idPaciente);
        }
    }
}
